name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x, 20.x]

<% if (dbType === 'postgresql') { %>
    services:
      postgres:
        image: postgres:15-alpine
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
          POSTGRES_DB: test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
<% } %>

    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Generate Prisma Client
        run: npx prisma generate
      
<% if (hasAuth) { %>
      - name: Create .env file for auth
        run: |
  <% if (authProvider === 'clerk') { %>
          echo "CLERK_SECRET_KEY=${{ secrets.CLERK_SECRET_KEY }}" >> .env
  <% } else if (authProvider === 'auth0') { %>
          echo "AUTH0_DOMAIN=${{ secrets.AUTH0_DOMAIN }}" >> .env
          echo "AUTH0_AUDIENCE=${{ secrets.AUTH0_AUDIENCE }}" >> .env
  <% } else if (authProvider === 'jwt') { %>
          echo "JWT_SECRET=${{ secrets.JWT_SECRET }}" >> .env
  <% } %>
<% } %>

      - name: Run backend tests
        run: npm run test
        env:
<% if (dbType === 'postgresql') { %>
          DATABASE_URL: "postgresql://postgres:password@localhost:5432/test"
<% } else { %>
          DATABASE_URL: "file:./test.db"
<% } %>

      # Placeholder for frontend tests - adjust path and commands as needed
      # - name: Run frontend tests
      #   run: |
      #     cd packages/frontend 
      #     npm ci
      #     npm test

      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-${{ matrix.node-version }}
          path: coverage
